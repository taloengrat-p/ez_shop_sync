// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'package:hive/hive.dart';

import 'package:ez_shop_sync/src/data/repository/base_hive_object.dart';

part 'product.g.dart';

@HiveType(typeId: 1)
class Product extends BaseHiveObject {
  @HiveField(7)
  String name;

  @HiveField(8, defaultValue: null)
  String? description;

  @HiveField(9, defaultValue: {})
  Map<String, num>? priceCategories;

  @HiveField(10, defaultValue: null)
  String? category;

  @HiveField(11, defaultValue: null)
  String? brand;

  @HiveField(12, defaultValue: null)
  List<String>? imageDetail;

  @HiveField(13, defaultValue: null)
  String? imageThumbnail;

  @HiveField(14, defaultValue: {})
  Map<String, dynamic>? attributes;

  @HiveField(15, defaultValue: [])
  List<String>? tag;

  @HiveField(16, defaultValue: ProductStatus.undefined)
  ProductStatus status;

  @HiveField(17, defaultValue: null)
  String? image;

  @HiveField(18, defaultValue: null)
  String? imageName;

  @HiveField(19)
  String storeId;

  @HiveField(20, defaultValue: null)
  num? quantity;

  @HiveField(21, defaultValue: null)
  String ownerId;

  @HiveField(22, defaultValue: null)
  num? price;

  Product({
    required super.id,
    required this.name,
    this.description,
    this.priceCategories,
    this.category,
    this.brand,
    this.imageDetail,
    this.imageThumbnail,
    this.attributes,
    this.tag,
    this.image,
    this.imageName,
    required this.storeId,
    required this.status,
    this.quantity,
    required this.ownerId,
    this.price,
  });

  @override
  String toString() {
    return 'Product(name: $name, description: $description, price: $priceCategories, category: $category, brand: $brand, imageDetail: $imageDetail, imageThumbnail: $imageThumbnail, attributes: $attributes, tag: $tag, image: $image, imageName: $imageName, storeId: $storeId, quantity: $quantity, ownerId: $ownerId)';
  }

  Product copyWith({
    String? id,
    String? name,
    String? description,
    Map<String, num>? priceCategories,
    String? category,
    String? brand,
    List<String>? imageDetail,
    String? imageThumbnail,
    Map<String, dynamic>? attributes,
    List<String>? tag,
    String? image,
    String? imageName,
    String? storeId,
    num? quantity,
    String? ownerId,
    ProductStatus? status,
  }) {
    return Product(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      priceCategories: priceCategories ?? this.priceCategories,
      category: category ?? this.category,
      brand: brand ?? this.brand,
      imageDetail: imageDetail ?? this.imageDetail,
      imageThumbnail: imageThumbnail ?? this.imageThumbnail,
      attributes: attributes ?? this.attributes,
      tag: tag ?? this.tag,
      image: image ?? this.image,
      imageName: imageName ?? this.imageName,
      storeId: storeId ?? this.storeId,
      quantity: quantity ?? this.quantity,
      ownerId: ownerId ?? this.ownerId,
      status: status ?? this.status,
    );
  }
}

@HiveType(typeId: 2)
enum ProductStatus {
  @HiveField(0)
  active,
  @HiveField(1)
  inactive,
  @HiveField(2)
  discontinued,
  @HiveField(3)
  outOfStock,
  @HiveField(4)
  undefined;

  static ProductStatus fromString(String? value) {
    switch (value) {
      case 'active':
        return ProductStatus.active;
      case 'inactive':
        return ProductStatus.inactive;
      case 'discontinued':
        return ProductStatus.discontinued;
      case 'outOfStock':
        return ProductStatus.outOfStock;

      default:
        return ProductStatus.undefined;
    }
  }
}
